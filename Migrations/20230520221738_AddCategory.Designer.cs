// <auto-generated />
using System;
using Microblog.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Microblog.Migrations
{
    [DbContext(typeof(MicroblogContext))]
    [Migration("20230520221738_AddCategory")]
    partial class AddCategory
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Microblog.Models.BlogPost", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CategoryId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("BlogPosts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = "PRS",
                            Content = "Set up folder structure. Deleted starter files. Added own HomeController. Added BlogPost class. Added own /Home/Index.chtml. Added own _layout. Added Tagg Helper to _ViewImports",
                            CreatedDate = new DateTime(2023, 5, 17, 21, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Microblog, day one",
                            UpdatedDate = new DateTime(2023, 5, 20, 15, 17, 38, 720, DateTimeKind.Local).AddTicks(7992)
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = "TRV",
                            Content = "Added EF Core. Added DBContext class(MicroblogContext) with starter seed data. Added EF Core dependency injection. Added bootstrap and supporting jQuery, popper. Added bootstrap and supporting scripts to _Layout. Added connection string. Created database using migrations. Added MicroblogContext to home controller to test mvc pattern. Quick render of data on home/index. Misspelled TagHelpers on _ViewImports and cried for an hour.",
                            CreatedDate = new DateTime(2023, 5, 18, 21, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Microblog, day two",
                            UpdatedDate = new DateTime(2023, 5, 20, 15, 17, 38, 720, DateTimeKind.Local).AddTicks(8001)
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = "DEV",
                            Content = "Tried to do an initial style of blog with bootstrap but not sure the results are the best. For something so simple I might just do my own styling. Or I need to learn more about bootstrap. Added new migration(TestContentMigration) to update blog content and titles. Added BlogPost controller with initial add, edit, delete requests. Added BlogPost Edit view.",
                            CreatedDate = new DateTime(2023, 5, 19, 21, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Microblog, day three",
                            UpdatedDate = new DateTime(2023, 5, 20, 15, 17, 38, 720, DateTimeKind.Local).AddTicks(8002)
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = "TST",
                            Content = "Added BlogPost/Edit view content. Added BlogPost/Delete view page and content. Tested passing the model around. Updated button on BlogPost/Edit view to reflect if making new post or updating exhisting one.",
                            CreatedDate = new DateTime(2023, 5, 19, 21, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Microblog, day Four",
                            UpdatedDate = new DateTime(2023, 5, 20, 15, 17, 38, 720, DateTimeKind.Local).AddTicks(8003)
                        });
                });

            modelBuilder.Entity("Microblog.Models.Category", b =>
                {
                    b.Property<string>("CategoryId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = "PRS",
                            Name = "Personal"
                        },
                        new
                        {
                            CategoryId = "DEV",
                            Name = "Development"
                        },
                        new
                        {
                            CategoryId = "TRV",
                            Name = "Travel"
                        },
                        new
                        {
                            CategoryId = "TST",
                            Name = "Test"
                        });
                });

            modelBuilder.Entity("Microblog.Models.BlogPost", b =>
                {
                    b.HasOne("Microblog.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });
#pragma warning restore 612, 618
        }
    }
}
